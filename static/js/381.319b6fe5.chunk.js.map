{"version":3,"file":"static/js/381.319b6fe5.chunk.js","mappings":"+LACA,EAAuB,wBAAvB,EAA2D,6BAA3D,EAAqG,8B,SC2BrG,EA1BkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAACC,GAAD,OACV,eAAmBH,UAAWC,EAA9B,UACE,UAAC,KAAD,CACEG,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAMV,IAHnB,WAME,gBACEE,UAAWC,EACXQ,IAAG,yCAAoCN,EAAMO,aAC7CC,IAAKR,EAAMS,KACXC,MAAM,SAER,uBAAIV,EAAMS,WAbLT,EAAMG,W,uLCPjBQ,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,qCACaC,IAIrC,SAASY,EAAiBC,GAC/B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBAC0Ba,EAD1B,+CAKxB,SAASC,EAAevB,GAC7B,OAAOU,EAAuB,GAAD,OACxBF,EADwB,kBACNR,EADM,oBACQS,EADR,oBAKxB,SAASe,EAAexB,GAC7B,OAAOU,EAAuB,GAAD,OACxBF,EADwB,kBACNR,EADM,4BACgBS,EADhB,oBAKxB,SAASgB,EAAkBzB,GAChC,OAAOU,EAAuB,GAAD,OACxBF,EADwB,kBACNR,EADM,4BACgBS,EADhB,sB,uHClC/B,EAA4B,6BAA5B,EAAsE,8BAAtE,EAA6G,0BAA7G,EAAqJ,+BAArJ,EAA4L,yB,SC8C5L,EAzCkB,SAAC,GAAiB,IAAfiB,EAAc,EAAdA,QACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOL,EAAP,KAAoBM,EAApB,KAiBA,OACE,mBAAQlC,UAAWC,EAAnB,UACE,kBAAMkC,SAbW,SAACC,GACpBA,EAAEC,iBACyB,KAAvBT,EAAYU,QAIhBN,EAAQJ,GACRM,EAAe,IACfE,EAAEG,OAAOC,SALPC,EAAAA,GAAAA,MAAY,qCAUkBzC,UAAWC,EAAzC,WACE,oBAAQyC,KAAK,SAAS,aAAW,SAAS1C,UAAWC,EAArD,WACE,iBAAMD,UAAWC,EAAjB,oBADF,KACgD,SAAC,MAAD,QAEhD,kBAEED,UAAWC,EACX0C,SAxBa,SAACP,GACpBF,EAAeE,EAAEG,OAAOK,QAwBlBF,KAAK,OACLG,aAAa,MACbC,YAAY,wB,UC9BP,SAASC,IACtB,OAA4Bd,EAAAA,EAAAA,UAAS,MAArC,eAAOpC,EAAP,KAAemD,EAAf,KACA,GAAsCf,EAAAA,EAAAA,UAAS,IAA/C,eAAOL,EAAP,KAAoBM,EAApB,MAEAe,EAAAA,EAAAA,YAAU,WACHrB,GAILsB,EAAAA,GAAqBtB,GAAauB,MAAK,SAACC,GACV,IAAxBA,EAAKC,QAAQC,OAIjBN,EAAUI,EAAKC,SAHbZ,EAAAA,GAAAA,MAAY,gBAKf,CAACb,IAKJ,OACE,iCACE,SAAC,EAAD,CAAWI,QALC,SAACoB,GACflB,EAAekB,MAKZvD,IAAU,SAAC0D,EAAA,EAAD,CAAW1D,OAAQA","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.js","services/api.js","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.js","views/MoviesView/MoviesView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieItem_list__gKU2E\",\"movieItem\":\"MovieItem_movieItem__rCyAp\",\"movieImage\":\"MovieItem_movieImage__wDuBr\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport s from \"./MovieItem.module.css\";\r\nconst MovieItem = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <ul className={s.list}>\r\n      {movies.map((movie) => (\r\n        <li key={movie.id} className={s.movieItem}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${movie.id}`,\r\n              state: { from: location },\r\n            }}\r\n          >\r\n            <img\r\n              className={s.movieImage}\r\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n              alt={movie.name}\r\n              width=\"320\"\r\n            />\r\n            <p>{movie.name}</p>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"4bfcb13ad28ed335545ffb88b4a098a0\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchSearchQuery(searchQuery) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\r\n  );\r\n}\r\n\r\nexport function fetchMovieById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchMovieCast(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchMovieReviews(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__JfWiH\",\"searchForm\":\"SearchBar_searchForm__cdmhm\",\"button\":\"SearchBar_button__tNbj8\",\"buttonLabel\":\"SearchBar_buttonLabel__FulZJ\",\"input\":\"SearchBar_input__v31Qx\"};","import { useState } from \"react\";\r\nimport { GoSearch } from \"react-icons/go\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./SearchBar.module.css\";\r\n\r\nconst SearchBar = ({ onClick }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (searchQuery.trim() === \"\") {\r\n      toast.error(\"Enter query in the search field.\");\r\n      return;\r\n    }\r\n    onClick(searchQuery);\r\n    setSearchQuery(\"\");\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <header className={s.searchbar}>\r\n      <form onSubmit={handleSubmit} className={s.searchForm}>\r\n        <button type=\"submit\" aria-label=\"search\" className={s.button}>\r\n          <span className={s.buttonLabel}>Search</span> <GoSearch />\r\n        </button>\r\n        <input\r\n          // value=\"searchQuery\"\r\n          className={s.input}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Search movies\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import { useState, useEffect } from \"react\";\r\nimport * as api from \"../../services/api\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\nimport MovieItem from \"../../components/MovieItem/MovieItem\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function MoviesView() {\r\n  const [movies, setMovies] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n\r\n    api.fetchSearchQuery(searchQuery).then((data) => {\r\n      if (data.results.length === 0) {\r\n        toast.error(\"Nothing\");\r\n        return;\r\n      }\r\n      setMovies(data.results);\r\n    });\r\n  }, [searchQuery]);\r\n\r\n  const onClick = (data) => {\r\n    setSearchQuery(data);\r\n  };\r\n  return (\r\n    <>\r\n      <SearchBar onClick={onClick} />\r\n      {movies && <MovieItem movies={movies} />}\r\n    </>\r\n  );\r\n}\r\n"],"names":["movies","location","useLocation","className","s","map","movie","to","pathname","id","state","from","src","poster_path","alt","name","width","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchQuery","searchQuery","fetchMovieById","fetchMovieCast","fetchMovieReviews","onClick","useState","setSearchQuery","onSubmit","e","preventDefault","trim","target","reset","toast","type","onChange","value","autoComplete","placeholder","MoviesView","setMovies","useEffect","api","then","data","results","length","MovieItem"],"sourceRoot":""}